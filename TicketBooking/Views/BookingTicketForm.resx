<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button_takePicture.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>